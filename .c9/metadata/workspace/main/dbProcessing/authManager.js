{"changed":true,"filter":false,"title":"authManager.js","tooltip":"/main/dbProcessing/authManager.js","value":"module.exports = (function(){\n    var crypto = require(\"crypto\");\n    var underscore = require(\"underscore\");\n    //var dbHelper = require()\n    var authMan = function(databaseClient){\n        this.LoggedUsers = [];\n        this.DatabaseClient = databaseClient;\n    }\n    \n    authMan.User = function(login, email, name, surname, password){\n        this.Id = parseInt(Math.random() * new Date());\n        this.Name = name;\n        this.Email = email;\n        this.Surname = surname;\n        this.Login = login;\n        this.Groups = [];\n        this.LoggedIn = false;\n        this.Password = crypto.createHash('md5').update(password).digest(\"hex\");\n    }\n    \n    authMan.Group = function(name)\n    {\n        this.Id = (parseInt(Math.random() * new Date()));\n        this.Name = name;\n        this.Users = []; //tablica identyfikatorów\n        this.Roles = []; //tablica identyfikatorów\n    }\n    \n    authMan.Role = function(name)\n    {\n        this.Id = (parseInt(Math.random() * new Date()));\n        this.Name = name;\n        this.Groups = []; //tablica identyfikatorów\n    }\n    \n    authMan.prototype.GetAllGroups = function(callback){\n        var that = this;\n        var clb = callback;\n        this.DatabaseClient.Execute(function(err, db){\n            db.collection(\"Groups\").find(function(err, groups){\n                that.AllGroups = groups;\n                clb(err, groups);\n            })\n            \n        });\n    }\n    \n    authMan.prototype.GetGroupByName = function(name, callback){\n        var that = this;\n        var clb = callback;\n        this.DatabaseClient.Execute(function(err, db){\n            return db.collection(\"Groups\").findOne({ Name: name }, clb)\n        });\n    }\n    \n    authMan.prototype.GetGroupById = function(id, callback){\n        var that = this;\n        var clb = callback;\n        this.DatabaseClient.Execute(function(err, db){\n            return db.collection(\"Groups\").findOne({ Id: id }, clb)\n        });\n    }\n    \n    authMan.prototype.GetUserByLogin = function(userLogin, callback){\n        var clb = callback;\n        var that = this;\n        this.DatabaseClient.Execute(function(err, db){\n            if(clb)\n                db.collection(\"Users\").find({ Login: userLogin }, clb.bind(that));\n            \n                \n            \n        });\n    }\n    \n    authMan.prototype.GetRoleByName = function(roleName, callback){\n        var clb = callback;\n        this.DatabaseClient.Execute(function(err, db){\n            return db.collection(\"Roles\").find({ Name: roleName }, clb);\n        });\n    }\n    \n    authMan.prototype.UpsertGroup = function(group){\n        var that = this;\n        this.DatabaseClient.Execute(function(err, db){\n            db.collection(\"Groups\").update({Id: group.Id}, group, {upsert: true});\n        });\n    }\n    \n    authMan.prototype.UpsertUser = function(user, callback){\n        var that = this;\n        var clb = callback;\n       \n        this.DatabaseClient.Execute(function(err, db){\n            if(clb)\n                db.collection(\"Users\").update({Id: user.Id}, user, {upsert: true}, clb);\n            else\n                db.collection(\"Users\").update({Id: user.Id}, user, {upsert: true});\n        });\n    }\n    \n    authMan.prototype.UpsertRole = function(role){\n        var that = this;\n        this.DatabaseClient.Execute(function(err, db){\n            db.collection(\"Roles\").update({Id: role.Id}, role, {upsert: true});\n        });\n    }\n    \n    authMan.prototype.GetAllUsers = function(callback){\n        var that = this;\n        var clb = callback;\n        this.DatabaseClient.Execute(function(err, db){\n            that.AllUsers = db.collection(\"Users\").find(function(err, users){\n                that.AllUsers = users;\n                clb(err, users);\n            })\n        });\n    }\n    \n    authMan.prototype.GetAllRoles = function(callback){\n        var that = this;\n        var clb = callback;\n        this.DatabaseClient.Execute(function(err, db){\n          db.collection(\"Roles\").find(function(err, roles){\n                that.AllRoles = roles;\n                clb(err, roles);\n          })\n            \n        });\n    }\n    \n    \n    \n    authMan.prototype.RegisterNewUser = function(login, email, name, surname, password)\n    {\n        var newUser = new authMan.User(login, email, name, surname, password);\n        newUser.LoggedIn = true; //od razu logujemy użytkownika\n        this.DatabaseClient.Execute(function(err, db){\n                    db.collection(\"Users\").insert(newUser, function(){\n                        return newUser;   \n                    });\n                });\n    }\n    \n    authMan.prototype.AddNewRole = function(roleName){\n        var newRole = new authMan.Role(roleName);\n        this.DatabaseClient.Execute(function(err, db){\n                    db.collection(\"Roles\").insert(newRole, function(){\n                        return newRole;   \n                    });\n                });\n    }\n    \n    authMan.prototype.AddGroup = function(groupName, roles){\n        var newGroup = new authMan.Group(groupName);\n        this.DatabaseClient.Execute(function(err, db){\n                    db.collection(\"Roles\").insert(newGroup, function(){\n                        return newGroup;   \n                    });\n                });\n    }\n    \n    authMan.prototype.AddUserToGroup = function(user, groupName)\n    {\n        //odśwież z bazy\n        var group = this.GetGroupByName(groupName);\n        if(user.Groups.indexOf[group.Id] != -1){\n            user.Groups.push(group.Id);\n            group.Users.push(user.Id);\n        }\n        this.UpsertGroup(group);\n        this.UpsertUser(user);\n    }\n    \n    authMan.prototype.AddRoleToGroup = function(role, groupName)\n    {\n        //odśwież z bazy\n        var group = this.GetGroupByName(groupName);\n        if(role.Groups.indexOf[group.Id] != -1){\n            role.Groups.push(group.Id);\n            group.Users.push(role.Id);\n        }\n        this.UpsertGroup(group);\n        this.UpsertRole(role);\n    }\n    \n    authMan.prototype.LogoutUser = function(loggedUser, callback)\n    {\n        loggedUser.LoggedIn = false;\n        this.UpsertUser(loggedUser, callback);\n        \n    }\n    \n    authMan.prototype.LoginUser = function(userLogin, password, callback){\n        var clb = callback;\n        this.GetUserByLogin(userLogin, function(err,users){\n        var user = users[0];\n        if(!user)\n        {\n            clb({val: false, message: \"User don't exist\"});  \n            return;\n        }\n        \n        var hashPass = crypto.createHash('md5').update(password).digest(\"hex\");\n        \n        if(user.Password === hashPass)\n        {\n            user.LoggedIn = true;\n            this.UpsertUser(user);\n            clb({val: true, message: \"User Successfully logged in\"});\n        }else\n        {\n            user.LoggedIn = false;\n            this.UpsertUser(user);\n            clb({val: false, message: \"Password don't match with userLogin\"});           \n        }\n        });\n    }\n    \n    authMan.prototype.IsUserInRole = function(userLogin, roleName)\n    {\n        var userGroupsIds = this.GetUserByLogin(userLogin).Groups;\n        \n        var userRoles = [];\n        for (var i = userGroupsIds.length; i--; ) {\n            userRoles.concat(this.GetGroupById(userGroupsIds[i]).Roles);\n        }\n        \n        var role = this.GetRoleByName(roleName)\n        \n        return underscore.contains(userRoles, role.Id);\n    }\n    \n    return authMan;\n    \n})()","undoManager":{"mark":-2,"position":100,"stack":[[{"start":{"row":47,"column":47},"end":{"row":47,"column":48},"action":"insert","lines":["O"],"id":1}],[{"start":{"row":47,"column":48},"end":{"row":47,"column":49},"action":"insert","lines":["n"],"id":2}],[{"start":{"row":47,"column":49},"end":{"row":47,"column":50},"action":"insert","lines":["e"],"id":3}],[{"start":{"row":55,"column":47},"end":{"row":55,"column":48},"action":"insert","lines":["O"],"id":4}],[{"start":{"row":55,"column":48},"end":{"row":55,"column":49},"action":"insert","lines":["n"],"id":5}],[{"start":{"row":55,"column":49},"end":{"row":55,"column":50},"action":"insert","lines":["e"],"id":6}],[{"start":{"row":38,"column":59},"end":{"row":38,"column":70},"action":"remove","lines":[".toArray();"],"id":7}],[{"start":{"row":38,"column":58},"end":{"row":38,"column":59},"action":"insert","lines":["c"],"id":8}],[{"start":{"row":38,"column":59},"end":{"row":38,"column":60},"action":"insert","lines":["l"],"id":9}],[{"start":{"row":38,"column":60},"end":{"row":38,"column":61},"action":"insert","lines":["b"],"id":10}],[{"start":{"row":39,"column":12},"end":{"row":39,"column":34},"action":"remove","lines":["return that.AllGroups;"],"id":11}],[{"start":{"row":38,"column":58},"end":{"row":38,"column":59},"action":"insert","lines":[","],"id":12}],[{"start":{"row":38,"column":58},"end":{"row":38,"column":59},"action":"remove","lines":[","],"id":13}],[{"start":{"row":38,"column":58},"end":{"row":38,"column":59},"action":"remove","lines":["c"],"id":14}],[{"start":{"row":38,"column":58},"end":{"row":38,"column":59},"action":"remove","lines":["l"],"id":15}],[{"start":{"row":38,"column":58},"end":{"row":38,"column":59},"action":"remove","lines":["b"],"id":16}],[{"start":{"row":38,"column":58},"end":{"row":38,"column":59},"action":"insert","lines":["f"],"id":17}],[{"start":{"row":38,"column":59},"end":{"row":38,"column":60},"action":"insert","lines":["u"],"id":18}],[{"start":{"row":38,"column":60},"end":{"row":38,"column":61},"action":"insert","lines":["n"],"id":19}],[{"start":{"row":38,"column":61},"end":{"row":38,"column":62},"action":"insert","lines":["c"],"id":20}],[{"start":{"row":38,"column":62},"end":{"row":38,"column":63},"action":"insert","lines":["t"],"id":21}],[{"start":{"row":38,"column":63},"end":{"row":38,"column":64},"action":"insert","lines":["i"],"id":22}],[{"start":{"row":38,"column":64},"end":{"row":38,"column":65},"action":"insert","lines":["o"],"id":23}],[{"start":{"row":38,"column":65},"end":{"row":38,"column":66},"action":"insert","lines":["n"],"id":24}],[{"start":{"row":38,"column":66},"end":{"row":38,"column":68},"action":"insert","lines":["()"],"id":25}],[{"start":{"row":38,"column":67},"end":{"row":38,"column":68},"action":"insert","lines":["e"],"id":26}],[{"start":{"row":38,"column":68},"end":{"row":38,"column":69},"action":"insert","lines":["r"],"id":27}],[{"start":{"row":38,"column":69},"end":{"row":38,"column":70},"action":"insert","lines":["r"],"id":28}],[{"start":{"row":38,"column":70},"end":{"row":38,"column":71},"action":"insert","lines":[","],"id":29}],[{"start":{"row":38,"column":71},"end":{"row":38,"column":72},"action":"insert","lines":[" "],"id":30}],[{"start":{"row":38,"column":72},"end":{"row":38,"column":73},"action":"insert","lines":["g"],"id":31}],[{"start":{"row":38,"column":73},"end":{"row":38,"column":74},"action":"insert","lines":["r"],"id":32}],[{"start":{"row":38,"column":74},"end":{"row":38,"column":75},"action":"insert","lines":["o"],"id":33}],[{"start":{"row":38,"column":75},"end":{"row":38,"column":76},"action":"insert","lines":["u"],"id":34}],[{"start":{"row":38,"column":76},"end":{"row":38,"column":77},"action":"insert","lines":["p"],"id":35}],[{"start":{"row":38,"column":77},"end":{"row":38,"column":78},"action":"insert","lines":["s"],"id":36}],[{"start":{"row":38,"column":79},"end":{"row":38,"column":81},"action":"insert","lines":["{}"],"id":37}],[{"start":{"row":38,"column":80},"end":{"row":40,"column":12},"action":"insert","lines":["","                ","            "],"id":38}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":38},"action":"insert","lines":["return that.AllGroups;"],"id":39}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":17},"action":"remove","lines":["r"],"id":40}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":17},"action":"remove","lines":["e"],"id":41}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":17},"action":"remove","lines":["t"],"id":42}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":17},"action":"remove","lines":["u"],"id":43}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":17},"action":"remove","lines":["r"],"id":44}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":17},"action":"remove","lines":["n"],"id":45}],[{"start":{"row":39,"column":16},"end":{"row":39,"column":17},"action":"remove","lines":[" "],"id":46}],[{"start":{"row":39,"column":30},"end":{"row":39,"column":31},"action":"remove","lines":[";"],"id":47}],[{"start":{"row":39,"column":30},"end":{"row":39,"column":31},"action":"insert","lines":[" "],"id":48}],[{"start":{"row":39,"column":31},"end":{"row":39,"column":32},"action":"insert","lines":["="],"id":49}],[{"start":{"row":39,"column":32},"end":{"row":39,"column":33},"action":"insert","lines":[" "],"id":50}],[{"start":{"row":39,"column":33},"end":{"row":39,"column":34},"action":"insert","lines":["g"],"id":51}],[{"start":{"row":39,"column":34},"end":{"row":39,"column":35},"action":"insert","lines":["r"],"id":52}],[{"start":{"row":39,"column":35},"end":{"row":39,"column":36},"action":"insert","lines":["o"],"id":53}],[{"start":{"row":39,"column":36},"end":{"row":39,"column":37},"action":"insert","lines":["u"],"id":54}],[{"start":{"row":39,"column":37},"end":{"row":39,"column":38},"action":"insert","lines":["p"],"id":55}],[{"start":{"row":39,"column":38},"end":{"row":39,"column":39},"action":"insert","lines":["s"],"id":56}],[{"start":{"row":39,"column":39},"end":{"row":39,"column":40},"action":"insert","lines":[";"],"id":57}],[{"start":{"row":39,"column":40},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":58},{"start":{"row":40,"column":0},"end":{"row":40,"column":16},"action":"insert","lines":["                "]}],[{"start":{"row":40,"column":16},"end":{"row":40,"column":17},"action":"insert","lines":["c"],"id":59}],[{"start":{"row":40,"column":17},"end":{"row":40,"column":18},"action":"insert","lines":["l"],"id":60}],[{"start":{"row":40,"column":18},"end":{"row":40,"column":19},"action":"insert","lines":["b"],"id":61}],[{"start":{"row":40,"column":19},"end":{"row":40,"column":21},"action":"insert","lines":["()"],"id":62}],[{"start":{"row":40,"column":20},"end":{"row":40,"column":21},"action":"insert","lines":["e"],"id":63}],[{"start":{"row":40,"column":21},"end":{"row":40,"column":22},"action":"insert","lines":["r"],"id":64}],[{"start":{"row":40,"column":22},"end":{"row":40,"column":23},"action":"insert","lines":["r"],"id":65}],[{"start":{"row":40,"column":23},"end":{"row":40,"column":24},"action":"insert","lines":[","],"id":66}],[{"start":{"row":40,"column":24},"end":{"row":40,"column":25},"action":"insert","lines":[" "],"id":67}],[{"start":{"row":40,"column":25},"end":{"row":40,"column":26},"action":"insert","lines":["g"],"id":68}],[{"start":{"row":40,"column":26},"end":{"row":40,"column":27},"action":"insert","lines":["r"],"id":69}],[{"start":{"row":40,"column":27},"end":{"row":40,"column":28},"action":"insert","lines":["o"],"id":70}],[{"start":{"row":40,"column":28},"end":{"row":40,"column":29},"action":"insert","lines":["u"],"id":71}],[{"start":{"row":40,"column":29},"end":{"row":40,"column":30},"action":"insert","lines":["p"],"id":72}],[{"start":{"row":40,"column":30},"end":{"row":40,"column":31},"action":"insert","lines":["s"],"id":73}],[{"start":{"row":40,"column":32},"end":{"row":40,"column":33},"action":"insert","lines":[";"],"id":74}],[{"start":{"row":38,"column":12},"end":{"row":38,"column":29},"action":"remove","lines":["that.AllGroups = "],"id":75}],[{"start":{"row":35,"column":46},"end":{"row":35,"column":47},"action":"insert","lines":["c"],"id":76}],[{"start":{"row":35,"column":47},"end":{"row":35,"column":48},"action":"insert","lines":["a"],"id":77}],[{"start":{"row":35,"column":48},"end":{"row":35,"column":49},"action":"insert","lines":["l"],"id":78}],[{"start":{"row":35,"column":49},"end":{"row":35,"column":50},"action":"insert","lines":["l"],"id":79}],[{"start":{"row":35,"column":50},"end":{"row":35,"column":51},"action":"insert","lines":["b"],"id":80}],[{"start":{"row":35,"column":51},"end":{"row":35,"column":52},"action":"insert","lines":["a"],"id":81}],[{"start":{"row":35,"column":52},"end":{"row":35,"column":53},"action":"insert","lines":["c"],"id":82}],[{"start":{"row":35,"column":53},"end":{"row":35,"column":54},"action":"insert","lines":["k"],"id":83}],[{"start":{"row":35,"column":46},"end":{"row":35,"column":54},"action":"remove","lines":["callback"],"id":84},{"start":{"row":35,"column":46},"end":{"row":35,"column":54},"action":"insert","lines":["callback"]}],[{"start":{"row":36,"column":24},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":85},{"start":{"row":37,"column":0},"end":{"row":37,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":37,"column":8},"end":{"row":37,"column":9},"action":"insert","lines":["v"],"id":86}],[{"start":{"row":37,"column":9},"end":{"row":37,"column":10},"action":"insert","lines":["a"],"id":87}],[{"start":{"row":37,"column":10},"end":{"row":37,"column":11},"action":"insert","lines":["r"],"id":88}],[{"start":{"row":37,"column":11},"end":{"row":37,"column":12},"action":"insert","lines":[" "],"id":89}],[{"start":{"row":37,"column":12},"end":{"row":37,"column":13},"action":"insert","lines":["c"],"id":90}],[{"start":{"row":37,"column":13},"end":{"row":37,"column":14},"action":"insert","lines":["l"],"id":91}],[{"start":{"row":37,"column":14},"end":{"row":37,"column":15},"action":"insert","lines":["b"],"id":92}],[{"start":{"row":37,"column":15},"end":{"row":37,"column":16},"action":"insert","lines":[" "],"id":93}],[{"start":{"row":37,"column":16},"end":{"row":37,"column":17},"action":"insert","lines":["="],"id":94}],[{"start":{"row":37,"column":17},"end":{"row":37,"column":18},"action":"insert","lines":[" "],"id":95}],[{"start":{"row":37,"column":18},"end":{"row":37,"column":19},"action":"insert","lines":["c"],"id":96}],[{"start":{"row":37,"column":19},"end":{"row":37,"column":20},"action":"insert","lines":["a"],"id":97}],[{"start":{"row":37,"column":20},"end":{"row":37,"column":21},"action":"insert","lines":["l"],"id":98}],[{"start":{"row":37,"column":21},"end":{"row":37,"column":22},"action":"insert","lines":["l"],"id":99}],[{"start":{"row":37,"column":18},"end":{"row":37,"column":22},"action":"remove","lines":["call"],"id":100},{"start":{"row":37,"column":18},"end":{"row":37,"column":26},"action":"insert","lines":["callback"]}],[{"start":{"row":37,"column":26},"end":{"row":37,"column":27},"action":"insert","lines":[";"],"id":101}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":2808,"scrollleft":0,"selection":{"start":{"row":205,"column":38},"end":{"row":205,"column":38},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":199,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1422660712000}